# Run the tests ->
# Build the app in a container ->
# Upload to artifact registry ->
# Deploy it to cloud run

# Credientials for Google Cloud Platform are stored in github repository secrets
# GCP_PROJECT_ID: Project ID
# GCP_SERVICE_ACCOUNT_CREDENTIALS: Service account credentials (JSON key)

# IAM roles required for the service account:
# - Cloud Run Admin
# - Artifact Registry Admin
# - Artifact Registry Create-on-Push Repo Admin
# - Service Account User
# - Storage Admin

name: Deploy
on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    environment: live
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
      - name: Build app
        run: npm install
      - name: Test app
        run: npm test
      - name: Authenticate with Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS }}"
      - name: Configure Docker for Google Cloud Registry
        run: gcloud auth configure-docker
      - name: Add Environment Variables
        run: echo "IMAGE_ARTIFACT_ENDPOINT=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}:${{ github.sha }}" >> "$GITHUB_ENV"
      - name: Build Docker image
        run: docker build -t ${IMAGE_ARTIFACT_ENDPOINT} .
      - name: Push Docker image to Google Cloud Registry
        run: docker push ${IMAGE_ARTIFACT_ENDPOINT}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy pour-pal-app \
           --image ${IMAGE_ARTIFACT_ENDPOINT} \
           --region europe-west2 \
           --allow-unauthenticated
